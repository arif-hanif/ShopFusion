parameters:
  - name: terraform_version
    default: "1.7.5"
  - name: service_connection
    default: " "
  - name: environment
    default: " "
  - name: working_directory
    default: "$(System.DefaultWorkingDirectory)"

# define the job and it's conditions
jobs:
  - job: apply_${{ parameters.environment }}
    displayName: "Terraform Apply ${{ parameters.environment }}"
    steps:
      # Download the build artifact from the previous job
      - task: DownloadBuildArtifacts@0
        displayName: "Download Terraform Artifacts"
        inputs:
          artifactName: "platform-terraform-plan"
          downloadPath: "$(Pipeline.Workspace)"

      # Download the sepcified version of Terraform and unzip it
      - task: Bash@3
        displayName: "Install Terraform ${{ parameters.terraform_version }}"
        inputs:
          targetType: "inline"
          script: |
            echo "Downloading from: https://releases.hashicorp.com/terraform/${{ parameters.terraform_version}}/terraform_${{ parameters.terraform_version }}_linux_amd64.zip"
            echo "Installing to: /usr/local/bin/terraform"
            curl https://releases.hashicorp.com/terraform/${{ parameters.terraform_version }}/terraform_${{ parameters.terraform_version }}_linux_amd64.zip --output terraform.zip
            unzip terraform.zip
            mv terraform /usr/local/bin/terraform
            rm terraform.zip

      # Run Terraform Init.
      - task: AzureCLI@2
        displayName: "Terraform Init"
        inputs:
          workingDirectory: "${{ parameters.working_directory }}"
          addSpnToEnvironment: true
          azureSubscription: "${{ parameters.service_connection }}"
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # Inherit Azure CLI service connection
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_OIDC_TOKEN=$idToken
            export ARM_TENANT_ID=$tenantId
            export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
            export ARM_USE_OIDC=true

            echo "terraform init -upgrade -backend-config=${{ parameters.environment }}.backend.tfbackend \
            -no-color"

            terraform init -upgrade -backend-config=${{ parameters.environment }}.backend.tfbackend \
            -no-color

      # Run Terraform Apply
      - task: AzureCLI@2
        displayName: "Terraform Apply"
        inputs:
          workingDirectory: "${{ parameters.working_directory }}"
          addSpnToEnvironment: true
          azureSubscription: "${{ parameters.service_connection }}"
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # Inherit Azure CLI service connection
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_OIDC_TOKEN=$idToken
            export ARM_TENANT_ID=$tenantId
            export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
            export ARM_USE_OIDC=true

            echo "terraform apply \
            -auto-approve \
            -no-color \
            -input=false \
            $(Pipeline.Workspace)/platform-terraform-plan/platform-${{ parameters.environment }}.tfplan"

            terraform apply \
            -auto-approve \
            -no-color \
            -input=false \
            $(Pipeline.Workspace)/platform-terraform-plan/platform-${{ parameters.environment }}.tfplan
